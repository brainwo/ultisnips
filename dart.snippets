snippet stateless "Create a StatelessWidget class"
class $1 extends StatelessWidget {
  const $1({super.key});

  @override
  Widget build(BuildContext context) {
    return Container();
  }
}
endsnippet

snippet flutter "Initate Flutter project"
void main() => runApp(const App());

class App extends StatelessWidget {
  const App({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: '$1',

      // Theme
      theme: lightTheme,
      darkTheme: darkTheme,
      highContrastTheme: highContrastTheme,
      highContrastDarkTheme: highContrastDarkTheme,

      // Route
      initialRoute: '/home',
      routes: {
        '/home': (context) => const HomeRoute(
              title: 'Something',
            ),
        '/other': (context) => const QuizRoute(
              title: 'Something',
            ),
      },
      onUnknownRoute: (e) {
        return MaterialPageRoute(
          builder: (context) => Scaffold(
            body: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  const Text('Not Found'),
                  MaterialButton(
                    onPressed: () =>
                        Navigator.pushReplacementNamed(context, '/home'),
                    child: const Text('Go back home'),
                  ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}
endsnippet

snippet timerstream "Stream timer"
Stream<String> timerStream(DateTime start) async* {
  while (true) {
    Duration duration = start.difference(DateTime.now());
    if (duration.inSeconds < 0) {
      yield '00:00.000';
      break;
    }
    int minute = duration.inMinutes;
    int second = duration.inSeconds % 60;
    int millisecond = duration.inMilliseconds % 1000;
    String buff = '';
    if (minute < 10) buff += '0';
    buff += minute.toString();
    buff += ':';
    if (second < 10) buff += '0';
    buff += second.toString();
    buff += '.';
    if (millisecond < 100) buff += '0';
    if (millisecond < 10) buff += '0';
    buff += millisecond.toString();
    yield buff;
    await Future.delayed(const Duration(milliseconds: 10));
  }
}
endsnippet

snippet nyxxmessage "Create a message"
event.message.channel.sendMessage(MessageBuilder(embeds: [
  EmbedBuilder(
    title: "An error occured",
    color: DiscordColor.fromRgb(255, 0, 0),
  )
]));
endsnippet
